/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { EmdrViewEvent } from "./components/my-component/emdr-view";
export namespace Components {
    interface EmdrView {
        "audio": string | null;
        "iconSize": number;
        "iconSpace": number;
        "iconSrc": string;
        "iconType": 'source' | 'shape';
        "isSameComponent": (componentKey: string) => Promise<boolean>;
        "movementDuration": number;
        "movementPeriod": number;
        "movementPreset": 'flick' | 'smooth';
        "startMovement": () => Promise<void>;
        "stickTime": number;
        "stopMovement": () => Promise<void>;
    }
}
declare global {
    interface HTMLEmdrViewElement extends Components.EmdrView, HTMLStencilElement {
    }
    var HTMLEmdrViewElement: {
        prototype: HTMLEmdrViewElement;
        new (): HTMLEmdrViewElement;
    };
    interface HTMLElementTagNameMap {
        "emdr-view": HTMLEmdrViewElement;
    }
}
declare namespace LocalJSX {
    interface EmdrView {
        "audio"?: string | null;
        "iconSize"?: number;
        "iconSpace"?: number;
        "iconSrc"?: string;
        "iconType"?: 'source' | 'shape';
        "movementDuration"?: number;
        "movementPeriod"?: number;
        "movementPreset"?: 'flick' | 'smooth';
        "onDurationEnd"?: (event: CustomEvent<EmdrViewEvent>) => void;
        "onMovementTick"?: (event: CustomEvent<EmdrViewEvent>) => void;
        "stickTime"?: number;
    }
    interface IntrinsicElements {
        "emdr-view": EmdrView;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "emdr-view": LocalJSX.EmdrView & JSXBase.HTMLAttributes<HTMLEmdrViewElement>;
        }
    }
}
